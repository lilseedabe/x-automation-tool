# 🚀 Render デプロイメント設定
# X自動反応ツール - 運営者ブラインド設計

services:
  # 統合 Web サービス（バックエンド + フロントエンド）
  - type: web
    name: x-automation-tool
    env: python
    buildCommand: |
      # Python依存関係
      pip install --upgrade pip
      pip install -r requirements.txt
      
      # フロントエンド（package-lock.json問題を回避）
      cd frontend
      rm -f package-lock.json
      npm install
      npm run build
      cd ..
    startCommand: |
      python -m uvicorn backend.main:app --host 0.0.0.0 --port $PORT
    envVars:
      # Python設定
      - key: PYTHON_VERSION
        value: 3.9
      
      # Node.js設定
      - key: NODE_VERSION
        value: 18
      
      # アプリケーション設定
      - key: APP_ENV
        value: production
      
      # データベース設定（Render PostgreSQL）
      - key: DATABASE_URL
        fromDatabase:
          name: x-automation-db
          property: connectionString
      
      # Groq AI設定（運営者が設定）
      - key: GROQ_API_KEY
        sync: false  # 手動で設定
      
      # セキュリティ設定
      - key: SECRET_KEY
        generateValue: true
      
      # ストレージ設定
      - key: STORAGE_MODE
        value: render_postgresql
      
      - key: OPERATOR_BLIND_ENABLED
        value: true
      
      # 暗号化設定
      - key: ENCRYPTION_LEVEL
        value: maximum
      
      - key: AUTO_DELETE_HOURS
        value: 24
      
      # CORS設定
      - key: ALLOWED_ORIGINS
        value: https://x-automation-tool.onrender.com,http://localhost:3000
      
      # ログレベル
      - key: LOG_LEVEL
        value: INFO
      
      # プライバシー設定
      - key: PRIVACY_MODE
        value: operator_blind
      
      # React設定
      - key: REACT_APP_API_URL
        value: https://x-automation-tool.onrender.com
      
      - key: REACT_APP_ENV
        value: production
      
      - key: REACT_APP_PRIVACY_MODE
        value: maximum
      
      - key: REACT_APP_OPERATOR_BLIND_MODE
        value: true
    
    # ヘルスチェック
    healthCheckPath: /api/system/health

# データベース設定
databases:
  - name: x-automation-db
    databaseName: x_automation_production
    user: x_automation_user
    plan: starter  # 無料プラン
    postgresMajorVersion: 15

# 環境設定
environments:
  production:
    # セキュリティ設定
    security:
      - encrypted_storage: true
      - operator_blind: true
      - privacy_level: maximum
    
    # パフォーマンス設定
    performance:
      - auto_scaling: true
      - health_checks: true
      - zero_downtime: true

# ビルド設定
build:
  # Python依存関係キャッシュ
  python:
    cache: true
    version: 3.9
  
  # Node.js依存関係キャッシュ
  node:
    cache: false  # package-lock.json問題回避のためキャッシュ無効
    version: 18

# デプロイメント設定
deployment:
  # 自動デプロイ
  auto_deploy:
    branch: main
    enabled: true
  
  # ビルド最適化
  optimization:
    - minify_assets: true
    - compress_responses: true
    - cache_static_assets: true

# 通知設定
notifications:
  # デプロイ通知
  deploy:
    enabled: true
    channels:
      - email

# プライバシー・コンプライアンス設定
privacy:
  # データ保護
  data_protection:
    - encryption_at_rest: true
    - encryption_in_transit: true
    - automatic_deletion: true
  
  # アクセス制御
  access_control:
    - operator_blind_storage: true
    - user_controlled_deletion: true
    - no_operator_access: true

# 費用最適化
cost_optimization:
  # リソース管理
  resources:
    - auto_sleep: true
    - efficient_scaling: true
    - minimal_resources: true
  
  # 無料プラン活用
  free_tier:
    - web_service: 750時間/月
    - postgresql: 1GB
    - bandwidth: 100GB/月

# 運用設定
operations:
  # バックアップ
  backup:
    enabled: true
    frequency: daily
    retention: 7日

# 開発者向け情報
developer_info:
  documentation: https://github.com/lilseedabe/x-automation-tool
  support: GitHub Issues
  license: MIT
  privacy_policy: 運営者ブラインド設計により最高レベルのプライバシー保護
  
# 注意事項
notes: |
  🔐 プライバシー重視設計:
  - ユーザーのAPIキーは運営者がアクセス不可
  - 暗号化された状態でのみ保存
  - 自動削除機能により長期保存なし
  
  💰 費用効率:
  - Renderの無料プランを最大活用
  - 統合デプロイで1サービスのみ使用
  - 自動スリープ機能でコスト削減
  
  🚀 高可用性:
  - ゼロダウンタイムデプロイ
  - 自動スケーリング
  - ヘルスチェック監視
  
  🔧 ビルド修正:
  - package-lock.json削除で依存関係問題解決
  - npm install で最新依存関係取得
  - Node.jsキャッシュ無効化